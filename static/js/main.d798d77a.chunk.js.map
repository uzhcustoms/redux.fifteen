{"version":3,"sources":["store/cellsReducer.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["defaultState","empty","value","top","left","cells","finish","time","hidden","setTime","losing","numbers","Array","keys","sort","Math","random","i","length","push","addCells","MOVE_CELL","TIME_INTERVAL","SET_TIME","HIDDEN_BLOCK","hiddenAction","type","StartGame","dispatch","useDispatch","useSelector","state","style","textAlign","display","className","onChange","e","setTimeAction","target","min","max","onClick","App","useState","count","setCount","setLosing","useEffect","id","setInterval","clearInterval","item","map","cell","innerText","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","index","findIndex","element","leftDiff","abs","topDiff","emptyLeft","emptyTop","every","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d798d77a.chunk.js","sourcesContent":["\r\nconst defaultState = {\r\n  empty: {\r\n      value: 0,\r\n      top: 0,\r\n      left: 0\r\n  },\r\n  cells: [],\r\n  finish: false,\r\n  time: 0,\r\n  hidden: false,\r\n  setTime: 60,\r\n  losing: false\r\n}\r\n\r\nconst addCells = () => {\r\n  const numbers = [...Array(15).keys()]\r\n   .sort(() => Math.random() - 0.5);\r\n\r\n  for (let i = 1; i <= numbers.length; i++) {\r\n  const value = numbers[i - 1] + 1\r\n  const left = i % 4;\r\n  const top = (i - left) / 4;\r\n \r\n  defaultState.cells.push({\r\n    value: value,\r\n    left: left,\r\n    top: top    \r\n      });\r\n  }\r\n} \r\naddCells();\r\n\r\nconst MOVE_CELL = \"MOVE_CELL\";\r\nconst TIME_INTERVAL = \"TIME_INTERVAL\";\r\nconst SET_TIME = \"SET_TIME\";\r\nconst HIDDEN_BLOCK = \"HIDDEN_BLOCK\";\r\n\r\nexport const cellReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n\r\n    case MOVE_CELL:\r\n      const index = state.cells.findIndex((element, index) => element.value == action.item)\r\n      const leftDiff = Math.abs(state.empty.left - state.cells[index].left);\r\n      const topDiff = Math.abs(state.empty.top - state.cells[index].top);\r\n      if(leftDiff + topDiff > 1) {\r\n        return {...state, cells: state.cells}\r\n      }\r\n\r\n     const emptyLeft = state.empty.left;\r\n     const emptyTop = state.empty.top ;\r\n     state.empty.left = state.cells[index].left;\r\n     state.empty.top = state.cells[index].top;\r\n     state.cells[index].left = emptyLeft;\r\n     state.cells[index].top = emptyTop;\r\n\r\n     state.finish = state.cells.every(cell => {\r\n     return cell.value === cell.top * 4 + cell.left;\r\n    })\r\n    return {...state, cells: [...state.cells]};\r\n\r\n    case TIME_INTERVAL:\r\n      if(state.finish) {\r\n        state.time = action.item;\r\n      }\r\n      return {...state, time: state.time};\r\n      \r\n    case SET_TIME:\r\n      state.setTime = action.setTime\r\n      return {...state, setTime: state.setTime};\r\n\r\n    case HIDDEN_BLOCK:\r\n      state.hidden = action.hidden\r\n      return {...state, hidden: state.hidden};\r\n\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport const moveCellAction = (item) => ({type: MOVE_CELL, item});\r\nexport const timeAction = (item) => ({type: TIME_INTERVAL, item});\r\nexport const setTimeAction = (setTime) => ({type: SET_TIME, setTime});\r\nexport const hiddenAction = (hidden) => ({type: HIDDEN_BLOCK, hidden});\r\n\r\n\r\n ","import './App.css';\nimport React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { moveCellAction, timeAction, setTimeAction, hiddenAction } from './store/cellsReducer';\nimport { useEffect, useState } from 'react';\n\nfunction StartGame() {\n  const dispatch = useDispatch();\n  const hidden = useSelector(state => state.cells.hidden);\n  const setTime = useSelector(state => state.cells.setTime);\n\n  const handleClick = ()=> {\n   dispatch(hiddenAction(true))\n  }\n\n  return (\n    <>\n    <h3 style={{textAlign: \"center\", display: (hidden) ? \"none\" : \"block\"}}>Установите время</h3>\n    <div className=\"startGame\" style={{display: (hidden) ? \"none\" : \"flex\"}}>\n       <input onChange={(e) => dispatch(setTimeAction(e.target.value))} type=\"number\" min=\"10\" max=\"600\" value={setTime}/>\n      <button onClick={handleClick} type=\"submit\">Старт</button>\n    </div>\n    </>\n  )\n} \n\nfunction App() {\n  const dispatch = useDispatch();\n  const cells = useSelector(state => state.cells.cells);\n  const finish = useSelector(state => state.cells.finish);\n  const hidden = useSelector(state => state.cells.hidden);\n  const setTime = useSelector(state => state.cells.setTime);\n  \n  const handleClick = () => {\n   dispatch(hiddenAction(true));\n   dispatch(timeAction(count)) \n  }\n\n  let [count, setCount] = useState(0);\n  let [losing, setLosing] = useState(false);\n\n  useEffect(() => {\n    let id = setInterval(() => {\n    hidden ? setCount(count + 1) : setCount(0) ;\n    }, 1000);\n    if (finish) clearInterval(id); \n    if (count >= setTime){\n      setLosing(true);\n      clearInterval(id);  \n      \n    } \n    return () => clearInterval(id); \n  });\n  \n  return (\n    <>\n      <h1>Пятнашки</h1>\n      <StartGame/>\n      <div className=\"field\" onClick={handleClick} style={{display: hidden && !losing ? 'flex' : 'none'}}>\n        {cells.map(cell => <div onClick={(e) => dispatch(moveCellAction(e.target.innerText))} style={{left: cell.left*100, top: cell.top*100, display: (finish) ? 'none' : 'flex'}} key={\"cell-\"+cell.value} className=\"cell\">{cell.value} </div>)}\n        <div className=\"result\" style={{display: finish ? 'flex' : 'none', textAlign: 'center'}}>\n          <h3 style={{color: \"green\"}}>Вы выйграли!</h3>\n          <p>Ваше время: {count}c.</p>\n        </div>\n       \n      </div>\n\n      <div className=\"time\" style={{display: !losing ? 'flex' : 'none'}}>\n            <h5>Время:</h5>\n            <h5>{count} c.</h5>\n      </div>\n\n      <div className=\"time\" style={{display: !losing ? 'flex' : 'none'}}>\n            <h5 >Установлено время прохождения:</h5>\n            <h5>{setTime} c.</h5>\n      </div>\n\n      <div className=\"result\" style={{display: losing ? 'flex' : 'none', color: \"red\", textAlign: \"center\"}}>\n            <h2 >Вы проиграли!</h2>\n            <h3>Время истекло!</h3>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers} from 'redux';\r\nimport { cellReducer } from './cellsReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst rootReducer = combineReducers({\r\n   cells: cellReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}